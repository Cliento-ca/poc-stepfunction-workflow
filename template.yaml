Transform: AWS::Serverless-2016-10-31

Globals:
    Function:
        Timeout: 5
        CodeUri: functions/
        Runtime: nodejs16.x
        MemorySize: 512

Resources:
    WorkflowStateMachine:
        Type: AWS::Serverless::StateMachine
        Properties:
            DefinitionUri: state-machine/workflow-state-machine.asl.json
            # Type: EXPRESS
            Tracing:
                Enabled: true
            Policies:
                - StepFunctionsExecutionPolicy:
                      StateMachineName: !GetAtt TaskStateMachine.Name
                - LambdaInvokePolicy:
                      FunctionName: !Ref GetTasksFunction
                      # - StepFunctionsExecutionPolicy:
                      #       #StateMachineName: !GetAtt PhaseStateMachine.Name

            DefinitionSubstitutions:
                WorkflowTableName: !Ref WorkflowTable
                TaskStateMachine: !Ref TaskStateMachine
                GetTasksFunction: !GetAtt GetTasksFunction.Arn
                # PhaseStateMachine: !Ref PhaseStateMachine
                # GetPhasesFunction: !GetAtt GetPhasesFunction.Arn
    # PhaseStateMachine:
    #     Type: AWS::Serverless::StateMachine
    #     Properties:
    #         DefinitionUri: state-machine/phase-state-machine.asl.json
    #         Type: EXPRESS
    #         Tracing:
    #             Enabled: true
    #         Policies:
    #             - StepFunctionsExecutionPolicy:
    #                   StateMachineName: !GetAtt SubWorkflowStateMachine.Name
    #             - LambdaInvokePolicy:
    #                   FunctionName: !Ref GetEntityStateFunction
    #             - LambdaInvokePolicy:
    #                   FunctionName: !Ref UpdateEntityStateFunction
    #         DefinitionSubstitutions:
    #             GetEntityStateFunction: !GetAtt GetEntityStateFunction.Arn
    #             UpdateEntityStateFunction: !GetAtt UpdateEntityStateFunction.Arn
    #             SubWorkflowStateMachine: !Ref SubWorkflowStateMachine
    #             GetSubWorkflowsFunction: !GetAtt GetSubWorkflowsFunction.Arn
    # SubWorkflowStateMachine:
    #     Type: AWS::Serverless::StateMachine
    #     Properties:
    #         DefinitionUri: state-machine/subworkflow-state-machine.asl.json
    #         Type: EXPRESS
    #         Tracing:
    #             Enabled: true
    #         Policies:
    #             - StepFunctionsExecutionPolicy:
    #                   StateMachineName: !GetAtt TaskStateMachine.Name
    #             - LambdaInvokePolicy:
    #                   FunctionName: !Ref GetEntityStateFunction
    #             - LambdaInvokePolicy:
    #                   FunctionName: !Ref UpdateEntityStateFunction
    #         DefinitionSubstitutions:
    #             GetEntityStateFunction: !GetAtt GetEntityStateFunction.Arn
    #             UpdateEntityStateFunction: !GetAtt UpdateEntityStateFunction.Arn
    #             TaskStateMachine: !Ref TaskStateMachine
    #             GetTasksFunction: !GetAtt GetTasksFunction.Arn
    TaskStateMachine:
        Type: AWS::Serverless::StateMachine
        Properties:
            DefinitionUri: state-machine/task-state-machine.asl.json
            # Type: EXPRESS
            Tracing:
                Enabled: true
            Policies:
                - LambdaInvokePolicy:
                      FunctionName: !Ref UpdateEntityStateFunction
                - LambdaInvokePolicy:
                      FunctionName: !Ref CheckIsAllClosedFunction
            DefinitionSubstitutions:
                UpdateEntityStateFunction: !GetAtt UpdateEntityStateFunction.Arn
                CheckIsAllClosedFunction: !GetAtt CheckIsAllClosedFunction.Arn
    GetPhasesFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - DynamoDBReadPolicy:
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: get-phases.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - get-phases.ts
    GetSubWorkflowsFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - DynamoDBReadPolicy:
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: get-subworkflows.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - get-subworkflows.ts
    GetTasksFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - DynamoDBReadPolicy:
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: get-tasks.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - get-tasks.ts

    CloseTaskFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - Version: '2012-10-17'
                  Statement:
                      - Effect: Allow
                        Action:
                            - states:SendTaskSuccess
                        Resource: !Ref TaskStateMachine
                - DynamoDBCrudPolicy: #could be read only?
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: close-task.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - close-task.ts
    UpdateEntityStateFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: update-entity-status.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - update-entity-status.ts

    CheckIsAllClosedFunction:
        Type: AWS::Serverless::Function
        Properties:
            Policies:
                - DynamoDBReadPolicy: #could be read only
                      TableName: !Ref WorkflowTable
                - AWSLambdaBasicExecutionRole
            Handler: check-all-closed.handler
            Environment:
                Variables:
                    TABLE_NAME: !Ref WorkflowTable
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: 'es2020'
                Sourcemap: true
                External:
                    - 'aws-sdk'
                EntryPoints:
                    - check-all-closed.ts

    WorkflowTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: workflow-table
            BillingMode: PAY_PER_REQUEST
            AttributeDefinitions:
                - AttributeName: PK
                  AttributeType: S
                - AttributeName: SK
                  AttributeType: S
                - AttributeName: GSI1
                  AttributeType: S
            KeySchema:
                - AttributeName: PK
                  KeyType: HASH
                - AttributeName: SK
                  KeyType: RANGE
            GlobalSecondaryIndexes:
                - IndexName: 'GSI1'
                  KeySchema:
                      - AttributeName: 'GSI1'
                        KeyType: 'HASH'
                      - AttributeName: 'PK'
                        KeyType: 'RANGE'
                  Projection:
                      ProjectionType: ALL
            # StreamSpecification:
            #     StreamViewType: NEW_AND_OLD_IMAGES
Outputs:
    WorkflowStateMachineArn:
        Value: !Ref WorkflowStateMachine
